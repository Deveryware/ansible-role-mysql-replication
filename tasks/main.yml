---
- name: import assert.yml
  import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Get server infos
  community.mysql.mysql_info:
    login_user: root
    login_unix_socket: "{{ mysql_socket }}"
  register: infos

- set_fact:
    ismariadb: "{{ infos.version.full is search('MariaDB') }}"

- name: Test connection to primary.
  community.mysql.mysql_replication:
    mode: getprimary
    login_user: "{{ mysql_replication_user.name }}"
    login_password: "{{ mysql_replication_user.password }}"
    login_host: "{{ mysql_replication_primary }}"
  register: primary_login_before
  ignore_errors: true

- name: Ensure replication user exists on primary.
  community.mysql.mysql_user:
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    state: present
    force_context: true
    login_unix_socket: "{{ mysql_socket }}"
  delegate_to: "{{ mysql_replication_primary }}"

- name: Get replica replication status.
  community.mysql.mysql_replication:
    mode: getreplica
    login_unix_socket: "{{ mysql_socket }}"
  register: replica

- set_fact:
    isreplica: "{{ replica.Is_Replica }}"

- name: Stop replica if replication user or Master_Host changed.
  community.mysql.mysql_replication:
    mode: stopreplica
    login_unix_socket: "{{ mysql_socket }}"
  register: stopreplica
  when:
    - isreplica
    - primary_login_before.failed or replica.Master_Host != mysql_replication_primary

- name: "Mariadb: Configure replication on the replica."
  community.mysql.mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_primary }}"
    primary_user: "{{ mysql_replication_user.name }}"
    primary_password: "{{ mysql_replication_user.password }}"
    primary_use_gtid: "{{ mariadb_primary_use_gtid }}"
    login_unix_socket: "{{ mysql_socket }}"
  register: replica
  when:
     - ismariadb
     - ( stopreplica.changed or not isreplica )

- name: "Mysql: Configure replication on the replica."
  community.mysql.mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_primary }}"
    primary_user: "{{ mysql_replication_user.name }}"
    primary_password: "{{ mysql_replication_user.password }}"
    primary_auto_position: "{% if infos.settings.gtid_mode == 'ON' %}true{% else %}false{% endif %}"
    login_unix_socket: "{{ mysql_socket }}"
  register: replica
  when:
     - ( not ismariadb )
     - ( stopreplica.changed or not isreplica )

- name: Start replication.
  community.mysql.mysql_replication:
    mode: startreplica
    login_unix_socket: "{{ mysql_socket }}"
  when:
    - replica.changed
